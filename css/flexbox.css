/*.headerPrincipal-titulo{
    display: inline-block;
    vertical-align: middle;
}

.headerPrincipal-nav{
    display: inline-block;  /alinear los elementos como en linea /
    vertical-align: middle; /Alinea  verticalmente en el centro los elementos del bloque/
    


}
*/

.headerPrincipal .container{
    display: flex;
    align-items: center;
    justify-content: space-between; /*Genera un espacio entre los elementos del bloque, viene junto display flex*/
}

.headerPrincipal-nav{
    display: flex;
}

.rodapePrincipal-patrocinadores .container{
    display: flex;
    justify-content: space-between;

}

.rodapePrincipal-patrocinadores-list{
    display: flex;
    align-items: center;
    justify-content: space-around;
    width: 70%; /*Le indicamos al navegador que los elementos de la lista representan 3/4 partes del bloque*/
    margin-right: 5%;
}

.rodapePrincipal-contatoForm-fieldset{
    display: flex;
}

.rodapePrincipal-navMap-list{
    display: flex;
    flex-direction: column;
    height: 250px;
    flex-wrap: wrap; /*Quiebra o divide las columnas cada 250px*/
}

.contenidoPrincipal-cursos{
    display: flex;
    flex-wrap: wrap;
}

.contenidoPrincipal-cursos-link{ /*Se crea porque en la etiqueta anterior al usar flex hay un position absolute que rompe el flex y no determina el tamaño correcto de cada item del bloque*/
    display: flex;
    width: 23%; /*se utiliza 23% porque em esta configuracion de wrap si deseo colocar 4 elementos en una linea del bloque del 100% cada uno deberia de tener 25% para que queden justos pero se bajan dos px para dejar un espacio entre cada elemento*/
}

.videoSobre .container{
    display: flex;
}
.videoSobre-sobre{
    display: flex;
    text-align: center;
    flex-direction: column;
}
.videoSobre-video{
    flex-grow: 2; /*Toma el espacio que sobra entre elemntos de la misma linea del bloque donde estan alineados, en este caso le dijimos un incremento de 2*/
    flex-shrink: 2; /*Disminuye el espacio, lo contrario del grow, se usa aqui porque cada vez que se encoja la resolucion soltara el espacio entre elementos del bloque*/
}

.videoSobre-sobre-list{
    flex-grow: 2; /*Dos espacios entre el boton y el texto, ya que aqui tenemos un flex column*/
}

/*NOTAS
-PARA QUE UN SPACE-AROUND FUNCIONE EN COLUMNAS CON ESPACIADOS ES NECESARIOS ASIGNAR UN HEIGTH
EN EL CASO DE USARLO EN UN FLEX ROW DEFAULT ES NECESARIO ASIGANR UN WIDTH

-FLEX-GROW ASIGNA DENTRO DE LA LINEA DEL BLOQUE UN ESPACIADO PARA TODOS LOS ELEMENTOS, SI SE LO ASIGNO A UN ELEMMENTO ESPECIFICO EL NUMERO SERA PROPORCIONAL AL TAMAÑO ASIGNADO A LOS ELEMENTOS, ES DECIR QUE SI MIDE IGUAL QUE LOS OTROS ELEMENTOS
AL COLOCARLE UN VALOR DE 2 ESTE ELEMENTOS SERA EL DOBLE DEL TAMAÑO QUE EL RESTO.

-FLEX-SHRINK SE REDUCE EL ELEMENTO PROPORCIONALMENTE AL NUMERO QUE LE INDIQUEMOS. LO OPUESTO AL GROW. SI LE COLOCAMOS 2 ESTE ELEMENTO SE REDUCIRA 2 VECES MENOS QUE EL RESTO DE LOS ELEMENTOS DEL BLOQUE.

-FLEX-BASIS MANTIENE LOS PIXELES QUE SE LE ASIGNEN SIN IMPORTAR QUE TANTO MANIPULEMOS LA RESOLUCION

-ATAJO PARA FLEX = FLEX: 0 (GROW) 1 (SHRINK) 200px BASIS)
*/

/*Responsive-----------------------------------------------------------------------------------------------------------------*/

@media (max-width:768px) { /*Te convierte estos cambios solamente en resoluciones mayores a 768px*/
    

.headerPrincipal .container{
    flex-direction: column;
    align-items: initial; /*Vuelve a su alineacion inicial*/
    text-align: center;
}

.headerPrincipal-nav{
    flex-direction: column;

}

.contenidoPrincipal-cursos{
    display: flex;
    flex-direction: column;
}

.contenidoPrincipal-cursos-link{
    width: 100%;
}

.rodapePrincipal-navMap-list{
    height: auto;
    flex-wrap: nowrap;
}
.rodapePrincipal-patrocinadores .container{
    flex-direction: column;
}

.rodapePrincipal-contatoForm-fieldset{
    width: 100%;

}
.rodapePrincipal-patrocinadores-list{
    align-items: center;
    width: 100%;
    margin: 0%;

}
.rodapePrincipal-contatoForm-fieldset{
    justify-content: center;
}

.headerPrincipal-nav-link-app{
    order: -1;

}
.videoSobre .container{
    display: flex;
    flex-direction: column;
}
}